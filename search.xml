<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解析Xml</title>
      <link href="/2020/06/29/jie-xi-xml/"/>
      <url>/2020/06/29/jie-xi-xml/</url>
      
        <content type="html"><![CDATA[<h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>做webservice的时候要解析xml，通过查找发先JAXB是可以解析xml并转换成对象的</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@XmlAccessorType</span><span class="token punctuation">(</span>XmlAccessType<span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span><span class="token annotation punctuation">@XmlType</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"标签名称"</span><span class="token punctuation">,</span> propOrder<span class="token operator">=</span><span class="token punctuation">{</span>属性名称<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@XmlRootElement</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderRequestMsgHeader</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**      *@XmlElement里面的name跟xml里面的标签对应      */</span>    <span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"msgHeader"</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> MsgHeader msgHeader<span class="token punctuation">;</span>    <span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"ORDER_CODE"</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String orderCode<span class="token punctuation">;</span>    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="MsgHeader类："><a href="#MsgHeader类：" class="headerlink" title="MsgHeader类："></a>MsgHeader类：</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@XmlAccessorType</span><span class="token punctuation">(</span>XmlAccessType<span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span><span class="token annotation punctuation">@XmlType</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"msgHeader"</span><span class="token punctuation">,</span> propOrder<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"USERNAME"</span><span class="token punctuation">,</span><span class="token string">"PAGESIZE"</span><span class="token punctuation">,</span><span class="token string">"CURRENT_PAGE"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@XmlRootElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"msgHeader"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MsgHeader</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"USERNAME"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String USERNAME<span class="token punctuation">;</span>    <span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"PAGESIZE"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String PAGESIZE<span class="token punctuation">;</span>    <span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"CURRENT_PAGE"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String CURRENT_PAGE<span class="token punctuation">;</span>    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><p>这是传过来的xml格式的数据，标签中orderRequestMsgHeader对应的是@XmlType中的name,msgHeader对应的就是@XmlElement中的名称</p><pre class=" language-java"><code class="language-java">String xml<span class="token operator">=</span><span class="token string">"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"</span> <span class="token operator">+</span>                <span class="token string">"&lt;orderRequestMsgHeader>\r"</span><span class="token operator">+</span>                <span class="token string">"&lt;msgHeader>\r"</span> <span class="token operator">+</span>                 <span class="token string">"&lt;USERNAME>***有限公司&lt;/USERNAME>\r"</span> <span class="token operator">+</span>                 <span class="token string">"&lt;PAGESIZE>50&lt;/PAGESIZE>\r"</span> <span class="token operator">+</span>                 <span class="token string">"&lt;CURRENT_PAGE>1&lt;/CURRENT_PAGE>\r"</span> <span class="token operator">+</span>                 <span class="token string">"&lt;/msgHeader>\r"</span><span class="token operator">+</span>                <span class="token string">"&lt;ORDER_CODE>000051&lt;/ORDER_CODE>\r"</span>                 <span class="token string">"&lt;/orderRequestMsgHeader>"</span><span class="token punctuation">;</span></code></pre><p>通过JAXB解析Xml文件</p><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><pre class=" language-java"><code class="language-java">OrderRequestMsgHeader header<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OrderRequestMsgHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//要转换未的类信息</span>            JAXBContext jaxbContext <span class="token operator">=</span> JAXBContext<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>OrderRequestMsgHeader<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建JAXBContext对象，注意一定要传@XmlRootElement的所标记的类的类型</span>            Unmarshaller unmarshaller <span class="token operator">=</span> jaxbContext<span class="token punctuation">.</span><span class="token function">createUnmarshaller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//拿到xml解析对象</span>            StringReader sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span>            header <span class="token operator">=</span> <span class="token punctuation">(</span>OrderRequestMsgHeader<span class="token punctuation">)</span>unmarshaller<span class="token punctuation">.</span><span class="token function">unmarshal</span><span class="token punctuation">(</span>sr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//转换后的对象信息</span>            <span class="token punctuation">]</span></code></pre><p>解析后的header：<code>OrderRequestMsgHeader [msgHeader=MsgHeader{ USERNAME='纸业有限公司', SUBMITDATE='2020-01-01 12:12:12', PAGESIZE='50', CURRENT_PAGE='1', }, orderCode=000051</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> xml </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml ， springboot ， JAXBContext </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2020/06/28/test/"/>
      <url>/2020/06/28/test/</url>
      
        <content type="html"><![CDATA[<h4 id="文章测试"><a href="#文章测试" class="headerlink" title="文章测试"></a>文章测试</h4><p>​<code>@MapperScan("com.bit.urms_supplier.mapper")@SpringBootApplication​</code><br><em>sss斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p><blockquote><p>文字引用</p></blockquote><p><code>行内代码</code></p><p><a href="https://blog.csdn.net/wsmrzx/article/details/81478945" target="_blank" rel="noopener">示例链接</a></p><p>例如：<img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1593346070989&amp;di=5dc46ec638ad054a784ea6255b89216c&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.imgtn.bdimg.com%2Fit%2Fu%3D3885109978%2C829038721%26fm%3D214%26gp%3D0.jpg" alt="示例图片"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/28/hello-world/"/>
      <url>/2020/06/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
